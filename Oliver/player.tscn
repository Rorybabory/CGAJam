[gd_scene load_steps=12 format=3 uid="uid://eoj5hohwtou2"]

[ext_resource type="PackedScene" uid="uid://dg2sl286ef8v" path="res://camera.tscn" id="2_jubq8"]
[ext_resource type="Script" path="res://oliver/magnet.gd" id="3_q1rui"]

[sub_resource type="GDScript" id="GDScript_gb2pk"]
script/source = "extends CharacterBody3D

@export var curve: Curve

@export var head: Node3D

@export var move_distance: float
@export var move_time: float

var direction: Vector3
var move_start: Vector3
var move_end: Vector3

var turn_start: Vector3
var turn_end: Vector3

var move_percent: float

var state: State
enum State {
	IDLE,
	MOVING,
	TURNING,
}


func set_state(new_state: State):
	state = new_state


func _ready():
	#Input.set_mouse_mode(Input.MOUSE_MODE_CAPTURED)
	direction = Vector3.FORWARD


func _physics_process(delta):

	match state:

		State.IDLE:

			# Rotate left
			if Input.is_action_just_pressed(\"move_left\"):
				turn_start = direction
				turn_end = direction.rotated(Vector3.UP, deg_to_rad(90))
				move_percent = 0
				set_state(State.TURNING)

			# Rotate right
			if Input.is_action_just_pressed(\"move_right\"):
				turn_start = direction
				turn_end = direction.rotated(Vector3.UP, deg_to_rad(-90))
				move_percent = 0
				set_state(State.TURNING)

			# Move forward
			if Input.is_action_just_pressed(\"move_up\"):
				move_start = transform.origin
				move_end = transform.origin + direction * move_distance
				move_percent = 0
				set_state(State.MOVING)

			# Move backward
			if Input.is_action_just_pressed(\"move_down\"):
				move_start = transform.origin
				move_end = transform.origin - direction * move_distance
				move_percent = 0
				set_state(State.MOVING)

			velocity = Vector3.ZERO

		State.MOVING:

			move_percent += delta / move_time
			var target = lerp(move_start, move_end, curve.sample(move_percent))

			velocity = (target - transform.origin) / delta

			# Return to idle
			if move_percent >= 1.0:
				set_state(State.IDLE)

		State.TURNING:

			move_percent += delta / move_time
			direction = turn_start.slerp(turn_end, curve.sample(move_percent))

			if move_percent >= 1.0:
				set_state(State.IDLE)

	move_and_slide()

	# Rotate head towards direction
	head.global_basis = Basis.looking_at(direction)


func _on_wall_detection_body_entered(body: Node3D) -> void:
	pass
	#if state is State.
#
"

[sub_resource type="Curve" id="Curve_52b7p"]
max_value = 2.0
_data = [Vector2(0, 0), 0.0, -0.239875, 0, 0, Vector2(1, 1), 0.0, 0.0, 0, 0]
point_count = 2
metadata/_snap_enabled = true

[sub_resource type="CapsuleMesh" id="CapsuleMesh_lhgsv"]

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_gr5pr"]
points = PackedVector3Array(-0.125207, -0.532801, -0.480507, 0.0227831, 0.47607, 0.498884, 0.169713, 0.559144, 0.464172, 0.231051, -0.803591, 0.320455, 0.40741, 0.651043, -0.243523, -0.482789, 0.594843, 0.0822132, -0.362868, -0.682312, 0.289697, 0.469044, -0.654529, -0.0662713, -0.127444, 0.842701, -0.338103, -0.393435, -0.683942, -0.244717, 0.438255, 0.623309, 0.200849, 0.0841477, 0.977454, 0.114795, -0.0682023, -0.976458, -0.12927, 0.20055, -0.563129, -0.451454, -0.185527, 0.595453, -0.453475, -0.273363, 0.592268, 0.407754, -0.00693649, -0.476823, 0.49966, 0.375821, -0.588614, 0.316955, 0.111579, 0.563059, -0.481177, -0.41725, 0.527866, -0.270497, -0.484546, -0.596972, -0.0665097, -0.279747, 0.908561, 0.0533361, -0.250197, -0.880712, 0.205319, 0.263647, -0.902771, -0.127394, 0.293368, 0.871526, -0.157196, 0.373412, -0.526319, -0.328246, 0.499663, 0.476641, -0.00688856, 0.0531056, 0.875001, 0.324703, -0.154543, -0.590854, 0.465879, -0.0972799, -0.782358, -0.398188, -0.387649, -0.498171, 0.31565, -0.30068, -0.587995, -0.388901)

[sub_resource type="CylinderMesh" id="CylinderMesh_n15q0"]

[sub_resource type="CylinderMesh" id="CylinderMesh_ud7b0"]

[sub_resource type="ParticleProcessMaterial" id="ParticleProcessMaterial_2n7gg"]
emission_shape = 2
emission_sphere_radius = 9.2
angle_min = -720.0
angle_max = 187.0
gravity = Vector3(2.08165e-12, -5.55, 2.08165e-12)

[sub_resource type="RibbonTrailMesh" id="RibbonTrailMesh_ay65w"]
shape = 0

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_o46pr"]

[node name="Player" type="CharacterBody3D" node_paths=PackedStringArray("head")]
transform = Transform3D(1, -3.48787e-16, 3.48787e-16, 3.48787e-16, 1, -3.48787e-16, -3.48787e-16, 3.48787e-16, 1, -0.4901, 1.02646, 1.73029)
collision_mask = 3
script = SubResource("GDScript_gb2pk")
curve = SubResource("Curve_52b7p")
head = NodePath("Head")
move_distance = 5.0
move_time = 0.5

[node name="Body Mesh" type="MeshInstance3D" parent="."]
mesh = SubResource("CapsuleMesh_lhgsv")

[node name="Body Collision" type="CollisionShape3D" parent="."]
shape = SubResource("ConvexPolygonShape3D_gr5pr")

[node name="Head" type="Node3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.75, 0)

[node name="Camera3D2" parent="Head" instance=ExtResource("2_jubq8")]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 2.08165e-12, 2.08165e-12, 2.08165e-12)
visible = false

[node name="Arm Pivot" type="Node3D" parent="Head"]
transform = Transform3D(1, -3.48787e-16, 3.48787e-16, 3.48787e-16, 1, -3.48787e-16, -3.48787e-16, 3.48787e-16, 1, 0.41, -0.75, 2.08165e-12)

[node name="MeshInstance3D" type="MeshInstance3D" parent="Head/Arm Pivot"]
transform = Transform3D(0.2, -5.2318e-16, -3.04919e-24, -3.04919e-24, -3.27835e-08, 0.2, -1.39515e-16, -0.75, -8.74228e-09, 2.08165e-12, 0.07, -0.75)
mesh = SubResource("CylinderMesh_n15q0")
skeleton = NodePath("../..")

[node name="MeshInstance3D" type="MeshInstance3D" parent="Head/Arm Pivot/MeshInstance3D"]
transform = Transform3D(2.5, 2.07893e-23, -1.38708e-22, 1.33598e-22, 0.1, 2.76348e-16, 2.58339e-22, -5.91924e-17, 2.5, 0, 1.065, 0)
mesh = SubResource("CylinderMesh_ud7b0")

[node name="Magnet" type="Node3D" parent="Head/Arm Pivot/MeshInstance3D/MeshInstance3D" node_paths=PackedStringArray("label")]
script = ExtResource("3_q1rui")
label = NodePath("Label")

[node name="Label" type="Label" parent="Head/Arm Pivot/MeshInstance3D/MeshInstance3D/Magnet"]
offset_top = -3.0
offset_right = 189.0
offset_bottom = 64.0
text = "Power is "

[node name="GPUParticles3D" type="GPUParticles3D" parent="Head/Arm Pivot/MeshInstance3D/MeshInstance3D/Magnet"]
transform = Transform3D(1, 5.66875e-24, 8.04428e-24, 3.42936e-22, 1, -2.21079e-15, 8.04427e-24, -9.47315e-17, 1, -4.34861, -4.31229, -2.38419e-07)
emitting = false
amount = 20
trail_enabled = true
trail_lifetime = 1.94
process_material = SubResource("ParticleProcessMaterial_2n7gg")
draw_pass_1 = SubResource("RibbonTrailMesh_ay65w")

[node name="Wall Detection" type="Area3D" parent="."]

[node name="CollisionShape3D" type="CollisionShape3D" parent="Wall Detection"]
transform = Transform3D(1.1, -1.33818e-31, 4.91916e-24, 4.91916e-24, 1.1, -4.91916e-24, 0, 0, 1.1, 0, 0, 0)
shape = SubResource("CapsuleShape3D_o46pr")

[connection signal="body_entered" from="Wall Detection" to="." method="_on_wall_detection_body_entered"]
